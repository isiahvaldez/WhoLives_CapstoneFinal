@page
@model WhoLives_CapstoneFinal.AssemblyModel
@{
    ViewData["Title"] = "Assembly";
}

<div class="row">
    <div class="col-6">
        <h1>Assembly Information</h1>
    </div>
    <div class="col-6 text-right">
        <br />
        <a onclick="AddToDatabase()" style='width:auto' class='btn btn-primary text-white'>Save Assembly</a>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="InventoryItemVM.InventoryItemObj.Name" class="control-label mr-3">Assembly Name:</label>
                <div class="form-inline col-12">
                    <input asp-for="InventoryItemVM.InventoryItemObj.Name" type="text" value="@Model.InventoryItemVM.InventoryItemObj.Name" class="form-control" required />
                </div>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItemVM.InventoryItemObj.InventoryItemID" class="control-label mr-3">Part Needed:</label>
                <div class="form-inline col-12" id="dropdownInput">
                    @Html.DropDownListFor(i => i.InventoryItemVM.InventoryItemObj.InventoryItemID,
               Model.InventoryItemVM.ItemList,
               "-Please select the part to assemble",
               new { @class = "form-control", id = "itemList" })

                    <span class="text-danger" asp-validation-for="InventoryItemVM.InventoryItemObj.InventoryItemID"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItemVM.AssemblyInfo.ItemQty" class="control-label mr-3">Quantity Needed for assembly:</label>
                <div class="form-inline col-12">
                    <input id="required-qty" asp-for="InventoryItemVM.AssemblyInfo.ItemQty" type="text" value="@Model.InventoryItemVM.AssemblyInfo.ItemQty" class="form-control" required />
                </div>
            </div>
            <br />
            <div class="row text-center">
                <div class="col-6">
                    <input type="hidden" asp-for="InventoryItemVM.InventoryItemObj.InventoryItemID" />
                    <a onclick="AddItemToTable('assemblyComponents', 'itemList')" style="width:auto;" class="btn btn-primary">Add Part</a>
                </div>
                <div class="col-6">
                    <a class="btn btn-warning" style="width:auto;" asp-page="./Index">Back to List</a>
                </div>
            </div>
        </form>
    </div>
    <div class="col-6 card">
        <br />
        <div class="row">
            <div class="col-12">
                <div class="tab-content py-3 px-3 px-sm-0">
                    <table class="table-bordered table-striped" id="assemblyComponents" style="width:100%">
                        <thead class="thead-dark table-bordered">
                            <tr class="card-header">
                                <th style="position:sticky;top:0;width:33%">Name</th>
                                <th style="position:sticky;top:0;width:33%" class="text-center">Required Qty</th>
                                <th style="position:sticky;top:0;width:33%" class="text-center">Actions</th>
                            </tr>
                            @if (Model.BuildAssemblyVM.BuildAssemblies != null)
                            {
                                foreach (var assembly in Model.BuildAssemblyVM.BuildAssemblies)
                                {
                                    <tr>
                                        <td style='display:none' class='px-3'>@(Model.BuildAssemblyVM.InventoryItems.SingleOrDefault(i => i.InventoryItemID == (Model.BuildAssemblyVM.Assemblies.SingleOrDefault(i => i.AssemblyID == assembly.AssemblyID)).InventoryItemID).InventoryItemID)</td>
                                        <td class='px-3'>@(Model.BuildAssemblyVM.InventoryItems.SingleOrDefault(i => i.InventoryItemID == (Model.BuildAssemblyVM.Assemblies.SingleOrDefault(i => i.AssemblyID == assembly.AssemblyID)).InventoryItemID).Name)</td>
                                        <td class='px-3'>@assembly.Assembly.ItemQty</td>
                                        <td class='text-center'><a  style='width:40px' class='btn btn-danger text-white'><i  class='far fa-trash-alt'></i></a></td>
                                    </tr>
                                }
                            }
                        </thead>
                    </table>
                    <br />
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function AddMissingEvents() {
            myTable = document.getElementById("assemblyComponents");
            var item;
            for (var i = 1; i < myTable.rows.length; i++) {
                myTable.rows[i].cells[3].firstChild.addEventListener("click", RemoveItemFromTable);
                item = myTable.rows[i].cells[0].innerHTML;
                item = item.replace(/[^0-9]/g, "");
                console.log("replaced = " + item);
                myTable.rows[i].cells[1].addEventListener("click", function (item) { return function () { SetSelectedItem('itemList', item); } }(item));
            }
            document.getElementById("itemList").selectedIndex = 0;
        }

        function AddItemToTable(tableID, dropdownID) {
            var dropdown = document.getElementById(dropdownID); // the item selected in the "Part Needed" dropdown
            var itemID = dropdown.options[dropdown.selectedIndex].value;
            var itemName = dropdown.options[dropdown.selectedIndex].text;
            var currTable = document.getElementById(tableID);
            var requiredQty = document.getElementById("required-qty").value;
            console.log("there are " + currTable.rows.length + "rows");
            // before adding a new item, search the table for duplicates
            if (itemID != null && itemID != "" && requiredQty > 0) {
                for (var i = 0; i < currTable.rows.length; i++) {
                    if (currTable.rows[i].cells[0].innerHTML == itemID) {
                        currTable.rows[i].cells[2].innerHTML = requiredQty;
                        return;
                    }
                }

                var newRow = currTable.insertRow(-1); // add row at next index
                newRow.innerHTML = "<td style='display:none'>" + itemID + "</td><td class='px-3' onclick=SetSelectedItem('" + dropdownID + "','" + itemID + "')> "
                    + itemName + "</td > <td class='px-3'>" + requiredQty
                    + "</td><td class='text-center'><a style='width:40px' class='btn btn-danger text-white'><i class='far fa-trash-alt'></i></a></td>";
                newRow.cells[3].firstChild.addEventListener("click", RemoveItemFromTable); // add listener to the button inside the cell
            }
        }

        function RemoveItemFromTable() {
            var nodeToDelete = this.parentNode;
            var parent = nodeToDelete.parentNode;
            parent.parentNode.removeChild(parent);
        }

        function AddToDatabase() {
            console.log("Add items to database");
            var urlParams = new URLSearchParams(window.location.search);
            var id = urlParams.get("id");
            var componentList = [];
            var myTable = document.getElementById("assemblyComponents");
            // get table row data
            // don't read data from the table header
            for (var i = 1; i < myTable.rows.length; i++) {
                var Component = {
                    id: id,
                    InventoryItemID: myTable.rows[i].cells[0].innerHTML.replace(/[^0-9]/g, ""),
                    Qty: myTable.rows[i].cells[2].innerHTML.replace(/[^0-9]/g, "")
                }
                componentList.push(Component);
                console.log("Assembly: " + myTable.rows[i].cells[1].innerHTML + " Qty:" + myTable.rows[i].cells[2].innerHTML);
            }

            console.log(componentList);

            if (componentList.length == 0) {
                $.ajax({
                    url: "../api/buildAssembly/id/" + id,
                    dataType: "json",
                    data: id,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        alert("success");
                    },
                    error: function (xhr) {
                        alert("error");
                    }
                })
            }
            else {
                $.ajax({
                    url: "../api/buildAssembly/list/" + JSON.stringify(componentList),
                    dataType: "json",
                    data: componentList,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        alert("success");
                    },
                    error: function (xhr) {
                        alert("error");
                    }
                })
            }
        }

        function SetSelectedItem(dropdownID, itemID) {
            console.log("setting item to " + itemID)
            $("#" + dropdownID).val(itemID);
        }

        AddMissingEvents();
    </script>
} 