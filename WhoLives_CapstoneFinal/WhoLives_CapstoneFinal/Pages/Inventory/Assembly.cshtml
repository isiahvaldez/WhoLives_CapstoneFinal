@page
@model WhoLives_CapstoneFinal.AssemblyModel
@{
    ViewData["Title"] = "Assembly";
}
<div class="row">
    <div class="col-6">
        <h1>Assembly Information</h1>
    </div>
    <div class="col-6 text-right">
        <br />
        <input type="submit" value="Save Assembly" style="width:auto;" asp-page="./Assembly" class="btn btn-success" />
    </div>
</div>
<hr />
<div class="row">
    <div class="col-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="InventoryItemVM.InventoryItemObj.Name" class="control-label mr-3">Assembly Name:</label>
                <div class="form-inline col-12">
                    <input asp-for="InventoryItemVM.InventoryItemObj.Name" type="text" value="@Model.InventoryItemVM.InventoryItemObj.Name" class="form-control" required />
                </div>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItemVM.InventoryItemObj.InventoryItemID" class="control-label mr-3">Part Needed:</label>
                <div class="form-inline col-12">
                    @Html.DropDownListFor(i => i.InventoryItemVM.InventoryItemObj.InventoryItemID,
               Model.InventoryItemVM.ItemList,
               "-Please select the part to assemble",
               new { @class = "form-control", id = "itemList" })

                    <span class="text-danger" asp-validation-for="InventoryItemVM.InventoryItemObj.InventoryItemID"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItemVM.AssemblyInfo.ItemQty" class="control-label mr-3">Quantity Needed for assembly:</label>
                <div class="form-inline col-12">
                    <input id="required-qty" asp-for="InventoryItemVM.AssemblyInfo.ItemQty" type="text" value="@Model.InventoryItemVM.AssemblyInfo.ItemQty" class="form-control" required />
                </div>
            </div>
            <br />
            <div class="row text-center">
                <!-- Adds a part to the table, so it doesn't submit yet - IV 4/5/2020-->
                <div class="col-6">
                    <input type="hidden" asp-for="InventoryItemVM.InventoryItemObj.InventoryItemID" />
                    <input onclick="AddItemToTable('assemblyComponents', 'itemList')" value="Add Part" style="width:auto;" class="btn btn-primary" />
                </div>
                <div class="col-6">
                    <a class="btn btn-warning" style="width:auto;" asp-page="./Index">Back to List</a>
                </div>
            </div>
        </form>
    </div>
    <div class="col-6 card">
        <br />
        <div class="row">
            <div class="col-12">
                <div class="tab-content py-3 px-3 px-sm-0">
                    <table class="table-bordered table-striped" id="assemblyComponents" style="width:100%">
                        <thead class="thead-dark table-bordered">
                            <tr class="card-header">
                                <th style="position:sticky;top:0">Name</th>
                                <th style="position:sticky;top:0" class="text-center">Required Qty</th>
                                <th style="position:sticky;top:0" class="text-center">Select</th>
                            </tr>
                            <!-- populate current assembly list here - IV 4/5/2020 -->
                        </thead>
                    </table>
                    <br />
                    <div class="row text-right">
                        <div class="col-12">
                            <!--<input type="hidden" asp-for="InventoryItemVM.InventoryItemObj.InventoryItemID" />
                            <input type="submit" value="Remove" style="width:auto;" asp-page="./Assembly" class="btn btn-danger" />-->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    function AddItemToTable(tableID, itemID) {
        var dropdown = document.getElementById(itemID);
        var currItem = dropdown.options[dropdown.selectedIndex].value;
        var itemName = dropdown.options[dropdown.selectedIndex].text;
        var currTable = document.getElementById(tableID);
        var requiredQty = document.getElementById("required-qty").text;
        //var row = currTable.rows.length;
        console.log("Adding item " + currItem + " to table " + tableID);
        var newRow = currTable.insertRow(-1);
        var currCell = newRow.insertCell(0);
        currCell.appendChild(document.createTextNode(itemName));
        var requiredQty = document.getElementById("required-qty").value;
        currCell = newRow.insertCell(1);
        currCell.appendChild(document.createTextNode(requiredQty));
        currCell = newRow.insertCell(2);
        var buttonHTML = document.createElement("div");
        buttonHTML.innerHTML = "<a onclick=RemoveItemFromTable('" + currTable.id + "'," + newRow.rowIndex
            + ") style='width:40px' class='btn btn-danger text-white'><i class='far fa-trash-alt'></i></a>";
        currCell.appendChild(buttonHTML);
    }

    function RemoveItemFromTable(tableID, rowID) {
        var myTable = document.getElementById(tableID);
        var rowToDelete = myTable.rows.item(rowID);
        rowToDelete.remove();
    }
</script>
} 